PGFile: GrammarRules
      | Imports GrammarRules
      | GrammarRules 'terminals' TerminalRules
      | Imports GrammarRules 'terminals' TerminalRules
      | 'terminals' TerminalRules;

Imports: Imports ImportStm | ImportStm;
ImportStm: 'import' path=StrConst
         | 'import' path=StrConst 'as' Name;

GrammarRules: GrammarRules GrammarRule
            | GrammarRule;
GrammarRule: ActionOpt Name ':' rhs=GrammarRuleRHS ';'
           | ActionOpt Name '{' meta=ProdMetaDatas '}' ':' rhs=GrammarRuleRHS ';';
ActionOpt: Action | EMPTY;
GrammarRuleRHS {left, 5}: rhs=GrammarRuleRHS '|' Production
                        | Production;
Production: Assignments
          | Assignments '{' meta=ProdMetaDatas '}';

TerminalRules: TerminalRules TerminalRule
             | TerminalRule;
TerminalRule {left, 15}: ActionOpt Name ':' Recognizer ';'
                       | ActionOpt Name ':' ';'
                       | ActionOpt Name ':' Recognizer '{' meta=TermMetaDatas '}' ';'
                       | ActionOpt Name ':' '{' meta=TermMetaDatas '}' ';';

ProdMetaData: 'left' {Left} | 'reduce' {Reduce} | 'right' {Right} | 'shift' {Shift}
            | 'dynamic' {Dynamic} | 'nops' {NOPS} | 'nopse' {NOPSE}
            | IntConst {Priority}
            | UserMetaData
            | ProdKind;
ProdMetaDatas {left}: metas=ProdMetaDatas ',' meta=ProdMetaData | meta=ProdMetaData;

TermMetaData: 'prefer' {Prefer} | 'finish' {Finish} | 'nofinish' {NoFinish}
            | 'dynamic' {Dynamic}
            | IntConst {Priority}
            | UserMetaData;
TermMetaDatas: metas=TermMetaDatas ',' meta=TermMetaData | meta=TermMetaData;

UserMetaData: Name ':' value=ConstVal;
ProdKind: Name;
ConstVal: IntConst | FloatConst | BoolConst | StrConst;

Assignment: PlainAssignment
          | BoolAssignment
          | GrammarSymbolRef;
Assignments: Assignments Assignment | Assignment;
PlainAssignment: Name '=' gsymref=GrammarSymbolRef;
BoolAssignment: Name '?=' gsymref=GrammarSymbolRef;

ProductionGroup: '(' prod_rule_rhs=GrammarRuleRHS ')';

GrammarSymbolRef: gsymbol=GrammarSymbol RepetitionOperatorOpt
                | ProductionGroup RepetitionOperatorOpt;
RepetitionOperator: RepetitionOperatorOp RepetitionModifiersExpOpt;
RepetitionOperatorOpt: RepetitionOperator | EMPTY;
RepetitionOperatorOp: '*' {ZeroOrMore}
                    | '*!' {ZeroOrMoreGreedy}
                    | '+' {OneOrMore}
                    | '+!' {OneOrMoreGreedy}
                    | '?' {Optional}
                    | '?!' {OptionalGreedy};
RepetitionModifiersExp: '[' RepetitionModifiers ']';
RepetitionModifiersExpOpt: RepetitionModifiersExp | EMPTY;
RepetitionModifiers: RepetitionModifiers ',' RepetitionModifier | RepetitionModifier;
RepetitionModifier: Name;

GrammarSymbol: Name | StrConst;
Recognizer: StrConst | RegexTerm;

Layout: LayoutItem | Layout LayoutItem | EMPTY;
LayoutItem: WS | Comment;
Comment: '/*' Corncs '*/' | CommentLine;
Corncs: Cornc | Corncs Cornc | EMPTY;
Cornc: Comment | NotComment | WS;

terminals

Terminals: 'terminals';
Import: 'import';
As: 'as';
Colon: ':';
SemiColon: ';';
Comma: ',';
OBrace: '{';
CBrace: '}';
OBracket: '(';
CBracket: ')';
OSBracket: '[';
CSBracket: ']';
Choice: '|';
ZeroOrMore: '*';
ZeroOrMoreGreedy: '*!';
OneOrMore: '+';
OneOrMoreGreedy: '+!';
Optional: '?';
OptionalGreedy: '?!';
Equals: '=';
QEquals: '?=';
Left: 'left';
Right: 'right';
Reduce: 'reduce';
Shift: 'shift';
Dynamic: 'dynamic';
NOPS: 'nops';
NOPSE: 'nopse';
Prefer: 'prefer';
Finish: 'finish';
NoFinish: 'nofinish';
OComment: '/*';
CComment: '*/';
Name: /[a-zA-Z_][a-zA-Z0-9_\.]*/;
RegexTerm: /\/(\\.|[^\/\\])*\//;
IntConst: /\d+/;
FloatConst: /[+-]?(\d+\.\d*|\.\d+)([eE][+-]?\d+)?(?<=[\w\.])(?![\w\.])/;
BoolConst: /true|false/;
StrConst: /(?s)(^'[^'\\]*(?:\\.[^'\\]*)*')|(^"[^"\\]*(?:\\.[^"\\]*)*")/;
Action: /@[a-zA-Z0-9_]+/;
WS: /\s+/;
CommentLine: /\/\/.*/;
NotComment: /((\*[^\/])|[^\s*\/]|\/[^\*])+/;
