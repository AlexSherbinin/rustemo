/// Generated by rustemo on 2022-07-17 16:32:11.730391207 +02:00

use num_enum::TryFromPrimitive;
use super::rustemo_actions::*;

#[derive(Debug, Copy, Clone, TryFromPrimitive)]
#[repr(usize)]
pub enum TermKind {
    STOP = 0,
    Terminals = 1,
    Import = 2,
    As = 3,
    Colon = 4,
    SemiColon = 5,
    Comma = 6,
    OBrace = 7,
    CBrace = 8,
    OBracket = 9,
    CBracket = 10,
    OSBracket = 11,
    CSBracket = 12,
    Choice = 13,
    ZeroOrMore = 14,
    ZeroOrMoreGreedy = 15,
    OneOrMore = 16,
    OneOrMoreGreedy = 17,
    Optional = 18,
    OptionalGreedy = 19,
    Equals = 20,
    QEquals = 21,
    Left = 22,
    Right = 23,
    Reduce = 24,
    Shift = 25,
    Dynamic = 26,
    NOPS = 27,
    NOPSE = 28,
    Prefer = 29,
    Finish = 30,
    NoFinish = 31,
    OComment = 32,
    CComment = 33,
    Name = 34,
    RegexTerm = 35,
    IntConst = 36,
    FloatConst = 37,
    BoolConst = 38,
    StrConst = 39,
    Action = 40,
    WS = 41,
    CommentLine = 42,
    NotComment = 43,
}

#[derive(Debug, Copy, Clone)]
pub enum NonTermKind {
    EMPTY = 0,
    AUG = 1,
    File = 2,
    Imports = 3,
    Import = 4,
    GrammarRules = 5,
    GrammarRule = 6,
    GrammarRuleRHS = 7,
    Production = 8,
    TerminalRules = 9,
    TerminalRule = 10,
    ProdMetaData = 11,
    ProdMetaDatas = 12,
    TermMetaData = 13,
    TermMetaDatas = 14,
    UserMetaData = 15,
    Const = 16,
    Assignment = 17,
    Assignments = 18,
    PlainAssignment = 19,
    BoolAssignment = 20,
    ProductionGroup = 21,
    GSymbolReference = 22,
    RepetitionOperator = 23,
    RepetitionOperatorOp = 24,
    RepetitionModifiersExp = 25,
    RepetitionModifiers = 26,
    RepetitionModifier = 27,
    GSymbol = 28,
    Recognizer = 29,
    Layout = 30,
    LayoutItem = 31,
    Comment = 32,
    Corncs = 33,
    Cornc = 34,
}

#[derive(Debug)]
pub enum Symbol {
    Terminal(Terminal),
    NonTerminal(NonTerminal)
}

#[derive(Debug)]
pub enum Terminal {
    STOP,
    Terminals,
    Import,
    As,
    Colon,
    SemiColon,
    Comma,
    OBrace,
    CBrace,
    OBracket,
    CBracket,
    OSBracket,
    CSBracket,
    Choice,
    ZeroOrMore,
    ZeroOrMoreGreedy,
    OneOrMore,
    OneOrMoreGreedy,
    Optional,
    OptionalGreedy,
    Equals,
    QEquals,
    Left,
    Right,
    Reduce,
    Shift,
    Dynamic,
    NOPS,
    NOPSE,
    Prefer,
    Finish,
    NoFinish,
    OComment,
    CComment,
    Name(Name),
    RegexTerm(RegexTerm),
    IntConst(IntConst),
    FloatConst(FloatConst),
    BoolConst(BoolConst),
    StrConst(StrConst),
    Action(Action),
    WS(WS),
    CommentLine(CommentLine),
    NotComment(NotComment),
}

#[derive(Debug)]
pub enum NonTerminal {
    File(File),
    Imports(Imports),
    Import(Import),
    GrammarRules(GrammarRules),
    GrammarRule(GrammarRule),
    GrammarRuleRHS(GrammarRuleRHS),
    Production(Production),
    TerminalRules(TerminalRules),
    TerminalRule(TerminalRule),
    ProdMetaData(ProdMetaData),
    ProdMetaDatas(ProdMetaDatas),
    TermMetaData(TermMetaData),
    TermMetaDatas(TermMetaDatas),
    UserMetaData(UserMetaData),
    Const(Const),
    Assignment(Assignment),
    Assignments(Assignments),
    PlainAssignment(PlainAssignment),
    BoolAssignment(BoolAssignment),
    ProductionGroup(ProductionGroup),
    GSymbolReference(GSymbolReference),
    RepetitionOperator(RepetitionOperator),
    RepetitionOperatorOp(RepetitionOperatorOp),
    RepetitionModifiersExp(RepetitionModifiersExp),
    RepetitionModifiers(RepetitionModifiers),
    RepetitionModifier(RepetitionModifier),
    GSymbol(GSymbol),
    Recognizer(Recognizer),
    Layout(Layout),
    LayoutItem(LayoutItem),
    Comment(Comment),
    Corncs(Corncs),
    Cornc(Cornc),
}

#[derive(Copy, Clone, TryFromPrimitive)]
#[repr(usize)]
pub enum ProdKind {
    FileP0 = 1,
    FileP1 = 2,
    FileP2 = 3,
    FileP3 = 4,
    FileP4 = 5,
    ImportsP0 = 6,
    ImportsP1 = 7,
    ImportP0 = 8,
    ImportP1 = 9,
    GrammarRulesP0 = 10,
    GrammarRulesP1 = 11,
    GrammarRuleP0 = 12,
    GrammarRuleP1 = 13,
    GrammarRuleRHSP0 = 14,
    GrammarRuleRHSP1 = 15,
    ProductionP0 = 16,
    ProductionP1 = 17,
    TerminalRulesP0 = 18,
    TerminalRulesP1 = 19,
    TerminalRuleP0 = 20,
    TerminalRuleP1 = 21,
    TerminalRuleP2 = 22,
    TerminalRuleP3 = 23,
    ProdMetaDataP0 = 24,
    ProdMetaDataP1 = 25,
    ProdMetaDataP2 = 26,
    ProdMetaDataP3 = 27,
    ProdMetaDataP4 = 28,
    ProdMetaDataP5 = 29,
    ProdMetaDataP6 = 30,
    ProdMetaDataP7 = 31,
    ProdMetaDataP8 = 32,
    ProdMetaDatasP0 = 33,
    ProdMetaDatasP1 = 34,
    TermMetaDataP0 = 35,
    TermMetaDataP1 = 36,
    TermMetaDataP2 = 37,
    TermMetaDataP3 = 38,
    TermMetaDataP4 = 39,
    TermMetaDataP5 = 40,
    TermMetaDatasP0 = 41,
    TermMetaDatasP1 = 42,
    UserMetaDataP0 = 43,
    ConstP0 = 44,
    ConstP1 = 45,
    ConstP2 = 46,
    ConstP3 = 47,
    AssignmentP0 = 48,
    AssignmentP1 = 49,
    AssignmentP2 = 50,
    AssignmentsP0 = 51,
    AssignmentsP1 = 52,
    PlainAssignmentP0 = 53,
    BoolAssignmentP0 = 54,
    ProductionGroupP0 = 55,
    GSymbolReferenceP0 = 56,
    GSymbolReferenceP1 = 57,
    RepetitionOperatorP0 = 58,
    RepetitionOperatorOpP0 = 59,
    RepetitionOperatorOpP1 = 60,
    RepetitionOperatorOpP2 = 61,
    RepetitionOperatorOpP3 = 62,
    RepetitionOperatorOpP4 = 63,
    RepetitionOperatorOpP5 = 64,
    RepetitionModifiersExpP0 = 65,
    RepetitionModifiersP0 = 66,
    RepetitionModifiersP1 = 67,
    RepetitionModifierP0 = 68,
    GSymbolP0 = 69,
    GSymbolP1 = 70,
    RecognizerP0 = 71,
    RecognizerP1 = 72,
    LayoutP0 = 73,
    LayoutP1 = 74,
    LayoutP2 = 75,
    LayoutItemP0 = 76,
    LayoutItemP1 = 77,
    CommentP0 = 78,
    CommentP1 = 79,
    CorncsP0 = 80,
    CorncsP1 = 81,
    CorncsP2 = 82,
    CorncP0 = 83,
    CorncP1 = 84,
    CorncP2 = 85,
}

